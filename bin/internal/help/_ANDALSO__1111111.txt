{{QBDLDATE:05-15-2024}}
{{QBDLTIME:17:58:28}}
{{DISPLAYTITLE:_ANDALSO}}
[[_ANDALSO]] is a [[Boolean|boolean]] logical operator that performs short-circuiting logical conjunction on two expressions.


{{PageSyntax}}
:{{Parameter|result}} = {{Parameter|firstvalue}} [[_ANDALSO]] {{Parameter|secondvalue}}


{{PageDescription}}
* A logical operation is said to be short-circuiting if the compiled code can bypass the evaluation of one expression depending on the result of another expression.
* If the result of the first expression evaluated determines the final result of the operation, there is no need to evaluate the second expression, because it cannot change the final result.
* Short-circuiting can improve performance if the bypassed expression is complex, or if it involves procedure calls.
* If both expressions evaluate to true, result is true.


{{PageAvailability}}
<!-- QB64 = a version or none, QBPE = a version or all, Platforms = yes or no -->
<gallery widths="48px" heights="48px" mode="nolines">
File:Qb64.png|'''none'''
File:Qbpe.png|'''v3.13.0'''
File:Apix.png
File:Win.png|'''yes'''
File:Lnx.png|'''yes'''
File:Osx.png|'''yes'''
</gallery>
<!-- Additional availability notes go below the gallery -->


{{PageExamples}}
''Example:'' AND versus _ANDALSO
{{CodeStart}}
{{Cl|DIM}} {{Cl|AS}} {{Cl|LONG}} index, values({{Text|1|#F580B1}} {{Cl|TO}} {{Text|10|#F580B1}}), v

{{Cl|FOR}} index = {{Text|1|#F580B1}} {{Cl|TO}} {{Text|10|#F580B1}}
    values(index) = {{Cl|RND}} * {{Text|255|#F580B1}}
{{Cl|NEXT}} index

{{Text|<nowiki>' value of index is now > 10</nowiki>|#919191}}

{{Cl|PRINT}} {{Text|<nowiki>"Trying _ANDALSO"</nowiki>|#FFB100}}

{{Text|<nowiki>' _ANDALSO performs short-circuiting logical conjunction and hence the GetArrayValue check is completely bypassed</nowiki>|#919191}}
{{Cl|IF}} index >= {{Text|1|#F580B1}} {{Cl|_ANDALSO}} index <= {{Text|10|#F580B1}} {{Cl|_ANDALSO}} {{Text|GetArrayValue|#55FF55}}(values(), index, v) {{Cl|THEN}}
    {{Cl|PRINT}} {{Text|<nowiki>"_ANDALSO: Value ="</nowiki>|#FFB100}}; v
{{Cl|ELSE}}
    {{Cl|PRINT}} {{Text|<nowiki>"_ANDALSO: Outside range."</nowiki>|#FFB100}}
{{Cl|END IF}}

{{Cl|PRINT}}
{{Cl|PRINT}} {{Text|<nowiki>"Trying AND"</nowiki>|#FFB100}}

{{Text|<nowiki>' AND does not performs short-circuiting logical conjunction and hence QB64-PE will throw a runtime error: Subscript out of range</nowiki>|#919191}}
{{Cl|IF}} index >= {{Text|1|#F580B1}} {{Cl|AND (boolean)|AND}} index <= {{Text|10|#F580B1}} {{Cl|AND (boolean)|AND}} {{Text|GetArrayValue|#55FF55}}(values(), index, v) {{Cl|THEN}}
    {{Cl|PRINT}} {{Text|<nowiki>"AND: Value ="</nowiki>|#FFB100}}; v
{{Cl|ELSE}}
    {{Cl|PRINT}} {{Text|<nowiki>"AND: Outside range."</nowiki>|#FFB100}}
{{Cl|END IF}}

{{Cl|END}}

{{Cl|FUNCTION}} {{Text|GetArrayValue%%|#55FF55}} (arr() {{Cl|AS}} {{Cl|LONG}}, idx {{Cl|AS}} {{Cl|LONG}}, value {{Cl|AS}} {{Cl|LONG}})
    value = arr(idx)
    {{Text|GetArrayValue|#55FF55}} = {{Text|-1|#F580B1}} {{Text|<nowiki>' return true</nowiki>|#919191}}
{{Cl|END FUNCTION}}
{{CodeEnd}}


{{PageSeeAlso}}
* [[_BIT]], [[&B]], [[_BYTE]]
* [[AND]], [[XOR]], [[OR]]
* [[AND (boolean)]], [[XOR (boolean)]], [[OR (boolean)]]
* [[_ORELSE]], [[_NEGATE]]
* [[Binary]], [[Boolean]]
* [[Mathematical Operations]]


{{PageNavigation}}
